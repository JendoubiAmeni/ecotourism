<?php

namespace ContainerWJy4s8P;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_U9ybARxService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.u9ybARx' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.u9ybARx'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\AdminController::login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\ClientController::login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\EvenementController::Add' => ['privates', '.service_locator.aUsFPsv', 'get_ServiceLocator_AUsFPsvService', true],
            'App\\Controller\\EvenementController::AfficheEvenement' => ['privates', '.service_locator.YJ0ApAf', 'get_ServiceLocator_YJ0ApAfService', true],
            'App\\Controller\\EvenementController::Delete' => ['privates', '.service_locator.UdNeXOy', 'get_ServiceLocator_UdNeXOyService', true],
            'App\\Controller\\EvenementController::event' => ['privates', '.service_locator.YJ0ApAf', 'get_ServiceLocator_YJ0ApAfService', true],
            'App\\Controller\\EvenementController::update' => ['privates', '.service_locator.2D2bXlD', 'get_ServiceLocator_2D2bXlDService', true],
            'App\\Controller\\ParticipantController::Add' => ['privates', '.service_locator.Rq.RA6B', 'get_ServiceLocator_Rq_RA6BService', true],
            'App\\Controller\\ParticipantController::AfficheParticipant' => ['privates', '.service_locator.nQuLcaQ', 'get_ServiceLocator_NQuLcaQService', true],
            'App\\Controller\\ParticipantController::Delete' => ['privates', '.service_locator.CyFA.Qx', 'get_ServiceLocator_CyFA_QxService', true],
            'App\\Controller\\ParticipantController::update' => ['privates', '.service_locator._gGSRLr', 'get_ServiceLocator_GGSRLrService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\AdminController:login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\ClientController:login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\EvenementController:Add' => ['privates', '.service_locator.aUsFPsv', 'get_ServiceLocator_AUsFPsvService', true],
            'App\\Controller\\EvenementController:AfficheEvenement' => ['privates', '.service_locator.YJ0ApAf', 'get_ServiceLocator_YJ0ApAfService', true],
            'App\\Controller\\EvenementController:Delete' => ['privates', '.service_locator.UdNeXOy', 'get_ServiceLocator_UdNeXOyService', true],
            'App\\Controller\\EvenementController:event' => ['privates', '.service_locator.YJ0ApAf', 'get_ServiceLocator_YJ0ApAfService', true],
            'App\\Controller\\EvenementController:update' => ['privates', '.service_locator.2D2bXlD', 'get_ServiceLocator_2D2bXlDService', true],
            'App\\Controller\\ParticipantController:Add' => ['privates', '.service_locator.Rq.RA6B', 'get_ServiceLocator_Rq_RA6BService', true],
            'App\\Controller\\ParticipantController:AfficheParticipant' => ['privates', '.service_locator.nQuLcaQ', 'get_ServiceLocator_NQuLcaQService', true],
            'App\\Controller\\ParticipantController:Delete' => ['privates', '.service_locator.CyFA.Qx', 'get_ServiceLocator_CyFA_QxService', true],
            'App\\Controller\\ParticipantController:update' => ['privates', '.service_locator._gGSRLr', 'get_ServiceLocator_GGSRLrService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\AdminController::login' => '?',
            'App\\Controller\\ClientController::login' => '?',
            'App\\Controller\\EvenementController::Add' => '?',
            'App\\Controller\\EvenementController::AfficheEvenement' => '?',
            'App\\Controller\\EvenementController::Delete' => '?',
            'App\\Controller\\EvenementController::event' => '?',
            'App\\Controller\\EvenementController::update' => '?',
            'App\\Controller\\ParticipantController::Add' => '?',
            'App\\Controller\\ParticipantController::AfficheParticipant' => '?',
            'App\\Controller\\ParticipantController::Delete' => '?',
            'App\\Controller\\ParticipantController::update' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\AdminController:login' => '?',
            'App\\Controller\\ClientController:login' => '?',
            'App\\Controller\\EvenementController:Add' => '?',
            'App\\Controller\\EvenementController:AfficheEvenement' => '?',
            'App\\Controller\\EvenementController:Delete' => '?',
            'App\\Controller\\EvenementController:event' => '?',
            'App\\Controller\\EvenementController:update' => '?',
            'App\\Controller\\ParticipantController:Add' => '?',
            'App\\Controller\\ParticipantController:AfficheParticipant' => '?',
            'App\\Controller\\ParticipantController:Delete' => '?',
            'App\\Controller\\ParticipantController:update' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
